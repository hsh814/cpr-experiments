project_name=binutils
bug_id=CVE-2017-6965
dir_name=$1/vulnloc/$project_name/$bug_id

project_url=git://sourceware.org/git/binutils-gdb.git
commit_id=53f7e8ea7fad1fcff1b58f4cbd74e192e0bcbc1d

current_dir=$PWD
mkdir -p $dir_name
cd $dir_name
git clone $project_url src
cd src
git checkout $commit_id

CC=wllvm CXX=wllvm++ CFLAGS="-g -O0" CXXFLAGS="$CFLAGS" ./configure --disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim --disable-werror
make -j32

sed -i '12343s/.*/if (target_specific_reloc_handling (rp, start, end, symtab))/' binutils/readelf.c

sed -i '11641i }' binutils/readelf.c
sed -i '11639i klee_assert( start + reloc->r_offset + reloc_size < end );\n' binutils/readelf.c
sed -i '11639i __trident_output("obs", "i32", end - start - reloc->r_offset - reloc_size);' binutils/readelf.c
sed -i '11639i int reloc_size = reloc_type == 1 ? 4 : 2; \n if(__trident_choice("L2440", "bool", (int[]){start, end, reloc->r_offset, reloc_size, reloc->r_addend}, (char*[]){"x", "y", "z", "m", "n"}, 5, (int*[]){}, (char*[]){}, 0)) error(_("MN10300 sym diff reloc writes past end of section"));\n else{' binutils/readelf.c

sed -i '11594i unsigned char *     end,' binutils/readelf.c

sed -i '168i #ifndef TRIDENT_OUTPUT\n#define TRIDENT_OUTPUT(id, typestr, value) value\n#endif\n' binutils/readelf.c
sed -i '168i #include <klee/klee.h>' binutils/readelf.c

make CXX=$TRIDENT_CXX CC=$TRIDENT_CC CFLAGS='-I/klee/source/include' CXXFLAGS='-I/klee/source/include' LDFLAGS='-lkleeRuntest -L/klee/build/lib -ltrident_runtime -L/CPR/lib' -j32

# cd binutils

# make CXX=$TRIDENT_CXX CC=$TRIDENT_CC  -j32

cd $current_dir
cp repair.conf $dir_name
cp spec.smt2 $dir_name
cp t1.smt2 $dir_name
cp -rf components $dir_name
cp exploit $dir_name
